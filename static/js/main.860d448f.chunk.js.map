{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleSortAlphabetically","setState","ALPHABET","handleSortByLength","LENGTH","handleReverse","handleReset","this","reorderedGoods","goods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,yBAA2B,WACzB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,mBAAqB,WACnB,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,cAAgB,WACd,EAAKJ,UAAS,SAACL,GAAD,MAAY,CAAEC,YAAaD,EAAMC,gBAfnD,EAkBES,YAAc,WACZ,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QArBzB,4CAyBE,WACE,IACEC,EAIEO,KAJFP,yBACAG,EAGEI,KAHFJ,mBACAE,EAEEE,KAFFF,cACAC,EACEC,KADFD,YAGIE,EAhEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQf,GACN,KAAKL,EAASS,SACZ,OAAOU,EAAME,cAAcD,GAE7B,KAAKpB,EAASW,OACZ,OAAOQ,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITlB,GACFa,EAAaM,UAGRN,EAyCkBO,CACrBvB,EACA,CACEI,SAAUS,KAAKX,MAAME,SACrBD,WAAYU,KAAKX,MAAMC,aAI3B,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWX,KAAKX,MAAME,WAAaL,EAASS,SACxC,iBACA,0BACJkB,QAASpB,EALX,iCAUA,wBACEmB,KAAK,SACLD,UAAWX,KAAKX,MAAME,WAAaL,EAASW,OACxC,oBACA,6BACJgB,QAASjB,EALX,4BAUA,wBACEgB,KAAK,SACLD,UAAWX,KAAKX,MAAMC,WAClB,oBACA,6BACJuB,QAASf,EALX,uBAU4B,IAA1BE,KAAKX,MAAMC,YACVU,KAAKX,MAAME,WAAaL,EAASM,OAEhC,wBACEoB,KAAK,SACLD,UAAU,4BACVE,QAASd,EAHX,sBAUN,6BACGE,EAAea,KAAI,SAAAC,GAAI,OACtB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eAzFrB,GAAyBC,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.860d448f.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handleSortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReverse = () => {\n    this.setState((state) => ({ isReversed: !state.isReversed }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const {\n      handleSortAlphabetically,\n      handleSortByLength,\n      handleReverse,\n      handleReset,\n    } = this;\n\n    const reorderedGoods = getReorderedGoods(\n      goodsFromServer,\n      {\n        sortType: this.state.sortType,\n        isReversed: this.state.isReversed,\n      },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={this.state.sortType === SortType.ALPHABET\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={handleSortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={this.state.sortType === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'}\n            onClick={handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={this.state.isReversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'}\n            onClick={handleReverse}\n          >\n            Reverse\n          </button>\n\n          {(this.state.isReversed === true\n          || this.state.sortType !== SortType.NONE)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={handleReset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          {reorderedGoods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}